---
base_image_url: https://download.fedoraproject.org/pub/fedora/linux/releases/28/Cloud/x86_64/images/Fedora-Cloud-Base-28-1.1.x86_64.qcow2
base_image_name: Fedora 28
vm:
  disk_gib: 16
...
---
{{- define "ENV" -}}
{{proxyVars .}}
{{- print "  " -}}
{{end}}
#cloud-config
write_files:
{{- if len $.HTTPProxy }}
 - content: |
     [Service]
     Environment="HTTP_PROXY={{$.HTTPProxy}}"{{if len .HTTPSProxy}} "HTTPS_PROXY={{.HTTPSProxy}}{{end}}"{{if len .NoProxy}} "NO_PROXY={{.NoProxy}},{{.Hostname}}{{end}}"
   path: /etc/systemd/system/docker.service.d/http-proxy.conf
{{- end}}
{{with proxyEnv . 5}}
 - content: |
{{.}}
   path: /etc/environment
{{end -}}

dnf:
{{- if len $.HTTPProxy }}
  proxy: "{{$.HTTPProxy}}"
{{- end}}
{{- if len $.HTTPSProxy }}
  https_proxy: "{{$.HTTPSProxy}}"
{{- end}}

package_upgrade: {{with .PackageUpgrade}}{{.}}{{else}}false{{end}}

runcmd:
 - {{beginTask . "Booting VM"}}
 - {{endTaskOk . }}

 - {{beginTask . "Update timezone"}}
 - {{template "ENV" .}}timedatectl set-timezone America/Vancouver
 - {{endTaskCheck .}}

 - hostnamectl set-hostname {{.Hostname}}

 - {{beginTask . (printf "Adding %s to /etc/hosts" .Hostname) }}
 - echo "127.0.0.1 {{.Hostname}}" >> /etc/hosts
 - {{endTaskCheck .}}

{{range .Mounts}}
 - mkdir -p {{.Path}}
 - sudo chown {{$.User}}:{{$.User}} {{.Tag}}
 - echo "{{.Tag}} {{.Path}} 9p x-systemd.automount,x-systemd.device-timeout=10,nofail,trans=virtio,version=9p2000.L 0 0" >> /etc/fstab
{{end}}
{{range .Mounts}}
 - {{beginTask $ (printf "Mounting %s" .Path) }}
 - mount {{.Path}}
 - {{endTaskCheck $}}
{{end}}

 - {{beginTask . "Installing C Development Tools and Libraries package"}}
 - {{template "ENV" .}}dnf -y groupinstall "C Development Tools and Libraries"
 - {{endTaskCheck .}}
 - {{beginTask . "Installing Development Tools"}}
 - {{template "ENV" .}}dnf -y groupinstall "Development Tools"
 - {{endTaskCheck .}}
 - {{beginTask . "Installing elfutils-libelf-devel"}}
 - {{template "ENV" .}}dnf -y install elfutils-libelf-devel 
 - {{endTaskCheck .}}
 - {{beginTask . "Installing bc"}}
 - {{template "ENV" .}}dnf -y install bc 
 - {{endTaskCheck .}}
 - {{beginTask . "Installing openssl-devel"}}
 - {{template "ENV" .}}dnf -y install openssl-devel
 - {{endTaskCheck .}}
   

users:
  - name: {{.User}}
    uid: "{{.UID}}"
    gid: "{{.GID}}"
    gecos: CC Demo User
    lock-passwd: true
    shell: /bin/bash
    sudo: ALL=(ALL) NOPASSWD:ALL
    ssh-authorized-keys:
    - {{.PublicKey}}
...
